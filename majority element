169. Majority Element

Given an array nums of size n, return the majority element.

The majority element is the element that appears more than ⌊n / 2⌋ times. You may assume that the majority element always exists in the array.


Solution -- 

class Solution {
    public int majorityElement(int[] nums) {
        int n = nums.length;
        HashMap<Integer, Integer> h = new HashMap<>();
        for(int i =0;i<n;i++){
            if (h.containsKey(nums[i])) {
             h.put(nums[i], h.get(nums[i]) + 1);
             }
            else{
                h.put(nums[i],1);
            } 
        }
        int max=0,k=0;
        for(int i=0;i<nums.length;i++){
             for (Map.Entry<Integer, Integer> entry : h.entrySet()) {
                if(entry.getValue()>max){
                    max = entry.getValue();
                    k= entry.getKey();
                }
        }
        }    
        
        return k;
    }
}
